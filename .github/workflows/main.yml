name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches:
      - dev_main
  pull_request:
    branches:  
      - dev_main
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: 'warning'
      tags:
        description: 'Test scenario tags'  



jobs:
  build:
    runs-on: [windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - uses: actions/cache@v1
        id: cache
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
    
      - name: Install Nuget
        uses: nuget/setup-nuget@v1
        with:
          nuget-version: ${{ env.NUGET_VERSION}}

      - name: NuGet to restore dependencies as well as project-specific tools that are specified in the project file
        #if: steps.cache.outputs.cache-hit != 'true'
        run: nuget restore

      - name: Build DotNET
        run: |
           cd "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\"
           .\MSBuild.exe /p:Configuration=Debug /p:Platform=x86 $Env:GITHUB_WORKSPACE
           .\MSBuild.exe /p:Configuration=Release /p:Platform=x86 $Env:GITHUB_WORKSPACE

      - name: Upload Test Programm
        uses: actions/upload-artifact@v2
        with:
          name: unittest_RaceHorologyLibTest
          path: ${{ github.workspace }}\RaceHorologyLibTest\bin\x86
          retention-days: 2


  run_test:
    needs: build
    runs-on: [windows-latest]
    steps:
      - name: Download Test Programm
        uses: actions/download-artifact@v2
        with:
          name: unittest_RaceHorologyLibTest
          path: ${{ github.workspace }}\RaceHorologyLibTest\bin\x86

      - name: Setup VSTest Path
        uses: darenm/Setup-VSTest@v1
      
      - name: VSTest_Debug
        run: vstest.console.exe /Platform:x86 $Env:GITHUB_WORKSPACE\RaceHorologyLibTest\bin\x86\Debug\RaceHorologyLibTest.dll /TestCaseFilter:"TestCategory!=HardwareDependent&TestCategory!=IntegrationDsvOnline" /logger:trx
      
      - name: VSTest_Release
        run: vstest.console.exe /Platform:x86 $Env:GITHUB_WORKSPACE\RaceHorologyLibTest\bin\x86\Release\RaceHorologyLibTest.dll /TestCaseFilter:"TestCategory!=HardwareDependent&TestCategory!=IntegrationDsvOnline" /logger:trx

      - name: Upload Test Results
        uses: actions/upload-artifact@v2
        with:
          name: unittest_RaceHorologyLibTest_Results
          path: ${{ github.workspace }}\TestResults\**\*.trx 
